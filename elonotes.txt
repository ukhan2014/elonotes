Steps to start:
1. Start up redis-server, elasticsearch, couchdb
2. start up ic-constatinople by doing: $ node server.js
3. start up ic-vienna by going to njs-app folder and doing: $ node server.js 
4. Go to the dubai, vienna and couchdb in browser


Wiki for cloud setup on local machine:
https://bitbucket.org/elosystemsteam/ic-vienna/wiki/Cloud%20local%20setup

CouchDB:
to ping: http://localhost:5984/
utils: http://127.0.0.1:5984/_utils/

IC dubai:
http://localhost:4000/

IC Vienna:
http://localhost:8000/
-modified ic-vienna/njs-app/config/config-default.json to contain:
 	"rootUser" : {
    "userName" : "usman.khan@elotouch.com",
    "password" : "usman123",
    "defaultUser_comment" : "This is default user credentials"
    },



Have to modify DeviceUtil.java, assets/local.properties so that local cloud setup sees the device, ip addresses and deviceid keys have to be changed. The stuff in local.properties should match the stuff entered in SystemProperty.java in athens under this function:
private SystemProperty() {
    deviceId = null;
    logLevel = "trace";
    serverPort =     443;
    hostName = "localhost:4000";
    webSocketProtocol = "wss";
    clientUID = "AV30AWaLBX7mEe9o1vU6";
    ContractUID = "AV30Ab-VBX7mEe9o1vU-";
    ContractVersionId = "AV1QqY7hmWvn-GWd7BVi";
    agentVersion = "1.0.0";
    registrationRetryInterval = 15000;
    connectionRetryInterval = 2000;
    serverIP = "54, 186, 2, 228";
    registrationLink = "https://" + hostName + "/api/deviceAPI/v0/register";
    heartBeatInterval = 60 * 1000;
}

local.properties file for athens: (paste into android studio assets/local.properties file)
******************************************************************************************
server_port=4000
host=10.42.16.54
web_socket_protocol=ws
web_server_protocol=http
client_id=AV30AWaLBX7mEe9o1vU6
contract_id=AV30Ab-VBX7mEe9o1vU-
log_level=trace
OTA_path=http\://10.42.16.54\:8001/systemUpdate/ota/ic-athens-ota.zip
OTA_prop_path=http\://10.42.16.54\:8001/systemUpdate/ota/build.prop
vienna_api_url=http\://10.42.16.54:8001/restapi
******************************************************************************************


temporary:
int pkgVersionCode = 0;
			String pkg = AppUtil.getPackageFromLocalUri(context, apkFile.getAbsolutePath());
			try {
				pkgVersionCode = context.getPackageManager().getPackageInfo(pkg, 0).versionCode;
			} catch (NameNotFoundException e) {
				if(e!=null){
					Log.e(TAG, "getPackageVersion: "+ e.toString());
					e.printStackTrace();
				}
			}catch (Exception e) {
				if(e!=null){
					e.printStackTrace();
				}
			}

			Log.v(TAG,"First uninstalling... current one's version is " + pkgVersionCode);
			AppUtil.silentUnInstall(pkg, context);
			Log.v(TAG,"Line after uninstalling...");



******************************************************************************************

To get the version number of package in Android using dumpsys:
$ adb shell
$ ps | grep -i "packageName"
  ** this will give you a package name, for example com.android.chrome
$ dumpsys package com.android.chrome | grep -i versionName

******************************************************************************************

EVR-1021

The EVR-1021 branch lets you downgrade an app through eloview by first uninstalling the
app and then installing the new lower version.

The dev images of athens don't have storage permission, so you have to install the apk
and then go into settings and grant the storage permission before you can try this feature
out, otherwise athens will not be able to download the apk that you get eloView to
download on to it.

Athens prevents an apk from being downloaded again because it keeps a copy of the file.
Because of this, you cannot drag the same apk through eloView twice unless you change
the filename, the filename will already be detected by Athens on the device and it will
block the download.

Version code is checked, so that when app is upgraded, uninstall is not done and hence
the app data is not deleted.

There is still an issue, because the downloaded files are not removed from the download
folder after installation, this can cause issues if the app that you are trying to 
install is already downloaded. If there are any issues like that, we might need to add
code that removes the apk files after install is complete.

Apps etc are downloaded in an elo hardware here:
/sdcard/elo/downloaded_content

** if already downloaded, it's ok to not download again, but it should at least uninstall
and then reinstall again... by letting it be known that the download is complete and 
letting elosecure do its thing.

******************************************************************************************


contract.json
*************************
1. cloud -- vienna, a frontend to constantinople
2. constantinople -- backend to vienna. dcio middleware between cloud and device. data is stored here.
3. athens and submodule dubai. dubai communicates with constantinople
   ** app/src/main/java/com is athens code
   ** app/src/main/java/io is dubai code it is generated code

dubai:
properties 	and 	actions
********************************
brigtness		trigger reboot
volume			trigger data reset


******************************************************************************************

Teams:

Thinking Hut:
Naveen	lead
Sachin  device
sam     device
Ganesh  cloud
Sohaib  cloud

Volansys:
Pratik	BSP
Neet    Cloud
Hardik  device
Anund   device

Zimr:
Utsal   android app dev
Harsh	cloud

******************************************************************************************

Armor:

VPN server is in keepass.

Login and then you will see "Current company" dropdown. Staging is staging/ other one is prod.
	Network tab -> "View servers" link on lower left hand will show all the server and
				   what they are used for.
	Network tab -> "View ip addresses" link on lower left hand will show all the servers and
				   their ip addresses. This is useful for ssh access into them.

******************************************************************************************

Node js on production is running slow/using lots of memory.
EVR856 Need to find tool to investigate:
Memory usage - which objects are created, is there a loop it is stuck in?

smartOS:


******************************************************************************************

EVR1204 for pp ref and pp 2:

After trying to figure out where timing is set for turning the display off after X seconds.
Found out that there is some updateDisplayAlarms() logic that is complicated.
Asked Pratik if he is familiar with DisplayController.java in athens. His response was that
the complicated code in DisplayController is used to check set time is intent based on
remaining time. He recommended that I either:
1. create my own updateDisplayAlarms() by overloading the existing one
2. use PULSE_INTENT in AppBroadcastReceiver, which is polling for time

Ended up using the 2nd approach. Worked well.

******************************************************************************************

Merging contract into device side code (athens)

Wiki:
    https://bitbucket.org/elosystemsteam/ic-vienna/wiki/Developer%20Steps%20for%20updating%20Contract%20in%20DCIO



Deploying Nougat OTA builds on Dev server:
1. Create a new release build job on Cloudbees Jenkins
2. Once build is done, download both the ota zip package and the build.prop file and put them into a folder
3. Log on to Armor online and go to the Services tab
4. Open Cisco Anyconnect client and log into "ARMOR STAGING SSL VPN" from keepass
5. Go to Armor online and get the IP address for the dev server
6. ssh into the dev server using the "Staging ssh access" from keepass
7. scp both the OTA zip and the build prop file to /home/ukhan on the dev server from your machine
8. Copy both build.prop and OTA zip file under "/var/lib/vienna-sys/<paypoint refresh folder>/3.20.<build number>/" folder
   You just need create folder for build version
DONE.
